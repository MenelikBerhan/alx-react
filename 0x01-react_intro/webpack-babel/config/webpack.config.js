const path = require('path');
const HTMLWebpackPlugin = require('html-webpack-plugin');
// const { CleanWebpackPlugin } = require('clean-webpack-plugin');

module.exports = {
  mode: 'development',
  output: {
    path: path.resolve(__dirname, '../dist'),
    filename: '[name].[contenthash].bundle.js',
  },
  performance: {
    maxAssetSize: 300000,
    maxEntrypointSize: 300000,
  },
  // devtool: 'inline-source-map',
  devServer: {
    static: path.resolve(__dirname, '../dist'),
    port: 8564,
    hot: true,
    compress: true,
  },
  module: {
    rules: [
      {
        test: /\.js$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader',
          options: {
            presets: [
              // ['@babel/preset-env',
              // { targets: 'defaults' }],
              '@babel/preset-env',
              '@babel/preset-react',
            ],
          },

        },
      },
      {
        test: /\.css$/i,
        use: ['style-loader', 'css-loader'],
      },
      {
        test: /\.(png|jpeg|jpg|gif|svg)$/i,
        type: 'asset/resource',
      },
    ],
  },
  plugins: [
    // new CleanWebpackPlugin({
    //   // dont clean stale assets like index.html generated by plugin
    //   cleanStaleWebpackAssets: false,
    // }),
    new HTMLWebpackPlugin({
      title: 'Holberton Dashboard',
      template: 'src/assets/index.html',
    }),
  ],
  // optimization: {
  //   runtimeChunk: 'single', // to use multiple entry points in single page
  //   // could also use `dependOn` property in entry modules for splitting
  //   splitChunks: {
  //     cacheGroups: {
  //       vendor: {
  //         test: /[\\/]node_modules[\\/]/,
  //         name: 'vendors',
  //         chunks: 'all',
  //       },
  //     },
  //   },
  // },
};
