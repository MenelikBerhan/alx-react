const path = require('path');
const HTMLWebpackPlugin = require('html-webpack-plugin')
const {CleanWebpackPlugin} = require('clean-webpack-plugin');

module.exports = {
  mode: 'development',
  entry: {
    header: {
      import: ['./modules/header/header.css', './modules/header/header.js'],
      // dependOn: 'shared',
    },
    body: {
      import: ['./modules/body/body.css', './modules/body/body.js'],
      // dependOn: 'shared',
    },
    footer: {
      import: ['./modules/footer/footer.css', './modules/footer/footer.js'],
      // dependOn: 'shared',
    },
    // shared: ['lodash', 'jquery'],
  },
  output: {
    path: path.resolve(__dirname, 'public'),
    filename: '[name].[contenthash].bundle.js',
  },
  performance: {
    maxAssetSize: 500000, 
  },
  devtool: 'inline-source-map',
  devServer: {
    static: path.resolve(__dirname, 'public'),
    port: 8564,
  },
  module: {
    rules: [
      {
        test: /\.css$/i,
        use: ['style-loader', 'css-loader'],
      },
      {
        test: /\.(png|jpeg|jpg|gif|svg)$/i,
        type: 'asset/resource',
      },
    ],
  },
  plugins: [
    new CleanWebpackPlugin({ 
      cleanStaleWebpackAssets: false  // dont clean stale assets like index.html generated by plugin
    }),
    new HTMLWebpackPlugin({
      title: "task-3"
    }),
  ],
  optimization: {
    runtimeChunk: 'single',   // to use multiple entry points in single page
    // could also use `dependOn` property in entry modules for splitting
    splitChunks: {
      cacheGroups: {
        vendor: {
          test: /[\\/]node_modules[\\/]/,
          name: 'vendors',
          chunks: 'all',
        },
      },
    },
  },
};
